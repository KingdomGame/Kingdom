{
  "name": "then-redis",
  "version": "1.3.0",
  "description": "A small, promise-based Redis client",
  "main": "index.js",
  "scripts": {
    "test": "jshint . && mocha --reporter spec 'tests/*-test.js'"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/mjackson/then-redis.git"
  },
  "dependencies": {
    "bluebird": "^2.3.11",
    "describe-property": "^1.0.0"
  },
  "devDependencies": {
    "expect": "^1.1.0",
    "jshint": "^2.5.10",
    "mocha": "^2.0.1",
    "redis": "^0.12.1"
  },
  "peerDependencies": {
    "redis": "^0.12.1"
  },
  "keywords": [
    "redis",
    "then",
    "promise",
    "promises"
  ],
  "author": {
    "name": "Michael Jackson"
  },
  "license": "MIT",
  "readme": "[![npm package](https://img.shields.io/npm/v/then-redis.svg?style=flat-square)](https://www.npmjs.org/package/then-redis)\n[![build status](https://img.shields.io/travis/mjackson/then-redis.svg?style=flat-square)](https://travis-ci.org/mjackson/then-redis)\n[![dependency status](https://img.shields.io/david/mjackson/then-redis.svg?style=flat-square)](https://david-dm.org/mjackson/then-redis)\n[![code climate](https://img.shields.io/codeclimate/github/mjackson/then-redis.svg?style=flat-square)](https://codeclimate.com/github/mjackson/then-redis)\n\n[then-redis](https://github.com/mjijackson/then-redis) is a fast, promise-based [Redis](http://redis.io) client for [node.js](http://nodejs.org). It's build on top of [node_redis](https://github.com/mranney/node_redis), so it's safe and stable.\n\n### Usage\n\nTo create a client:\n\n```js\nvar redis = require('then-redis');\n\nvar db = redis.createClient();\nvar db = redis.createClient('tcp://localhost:6379');\nvar db = redis.createClient({\n  host: 'localhost',\n  port: 6379,\n  password: 'password'\n});\n```\n\nOnce you have a client, you're ready to issue some commands. All [Redis commands](http://redis.io/commands) are present on the `Client` prototype and may be called with variable length argument lists*. Every command returns a promise for its result. [Pipelining](http://redis.io/topics/pipelining) happens automatically in most normal usage.\n\n```js\n// Simple set, incrby, and get\ndb.set('my-key', 1);\ndb.incrby('my-key', 5);\ndb.get('my-key').then(function (value) {\n  assert.strictEqual(value, 6);\n});\n\n// Multi-key set/get\ndb.mset({ a: 'one', b: 'two' });\ndb.mget('a', 'b').then(function (values) {\n  assert.deepEqual(values, [ 'one', 'two' ]);\n});\n\n// Sets\ndb.sadd('my-set', 1, 2, 3);\ndb.sismember('my-set', 2).then(function (value) {\n  assert.strictEqual(value, 1);\n});\n\n// Hashes\nvar originalHash = { a: 'one', b: 'two' };\ndb.hmset('my-hash', originalHash);\ndb.hgetall('my-hash').then(function (hash) {\n  assert.deepEqual(hash, originalHash);\n});\n\n// Transactions\ndb.multi();\ndb.incr('first-key');\ndb.incr('second-key');\ndb.exec().then(function (reply) {\n  assert.deepEqual(reply, [ 1, 1 ]);\n});\n\n// Pubsub\nvar subscriber = redis.createClient();\nsubscriber.on('message', function (channel, message) {\n  console.log('Received message: ' + message);\n});\nsubscriber.subscribe('my-channel').then(function () {\n  db.publish('my-channel', 'a message');\n});\n```\n\nIf you don't like the variable-length argument lists, or you already have an array of arguments that you need to pass to a command, you can always call `client.send()` directly. It takes two arguments: 1) the name of the Redis command and 2) an array of command arguments.\n\n```js\ndb.send('get', [ 'my-key' ]);\ndb.send('incrby', [ 'my-key', 5 ]);\ndb.send('mset', [ 'a', 'one', 'b', 'two' ]);\n```\n\n\\* `INFO`, `MGET`, `MSET`, `MSETNX`, `HMSET`, `HGETALL`, `LPUSH`, and `RPUSH` optionally accept/return JavaScript objects for convenience in dealing with Redis' multi-key and hash APIs\n\n### Compatibility\n\nFor best results, it is recommended that you use Redis 2.6 or above.\n\n### Installation\n\nUsing [npm](https://www.npmjs.org/):\n\n    $ npm install then-redis\n\n### Issues\n\nPlease file issues on the [issue tracker on GitHub](https://github.com/mjackson/then-redis/issues).\n\n### Tests\n\nTo run the tests in node, first start a redis server on the default port and host and then:\n\n    $ npm install\n    $ npm test\n\n### License\n\n[MIT](http://opensource.org/licenses/MIT)\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/mjackson/then-redis/issues"
  },
  "_id": "then-redis@1.3.0",
  "_from": "then-redis@~1.3.0"
}
